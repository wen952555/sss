body {
    font-family: Arial, sans-serif;
    background-color: #006400; 
    color: #fff; 
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw; /* 视窗宽度 */
    height: 100vh; /* 视窗高度 */
    overflow: hidden; /* 防止牌桌内容溢出时出现滚动条 */
}

.game-table {
    width: 98vw; /* 牌桌宽度，略小于视窗宽度以留边 */
    height: 98vh; /* 牌桌高度，略小于视窗高度以留边 */
    
    /* 设置最大宽高，防止在非常大的屏幕上过度拉伸，保持一定比例感 */
    /* 例如，假设我们希望牌桌大致是 4:3 或 16:9 的感觉 */
    /* 如果屏幕很宽，限制高度；如果屏幕很高，限制宽度 */
    max-width: calc(98vh * (16 / 9)); /* 假设最大宽高比为16:9，高度决定宽度 */
    max-height: calc(98vw * (9 / 16)); /* 宽度决定高度 */
    /* 如果希望总是尽可能填满，可以去掉或调整 max-width/max-height */
    /* 或者用一个固定的最大值，如 max-width: 1200px; max-height: 800px; */


    background-color: #004d00; 
    border: clamp(3px, 0.5vmin, 8px) solid #8B4513; /* 边框大小也自适应，vmin是vw和vh中较小的值*/
    border-radius: clamp(5px, 1vmin, 15px); /* 圆角自适应 */
    box-shadow: 0 0 clamp(10px, 2vmin, 30px) rgba(0,0,0,0.5); /* 阴影自适应 */
    
    display: flex;
    flex-direction: column; 
    padding: clamp(5px, 1vmin, 15px); /* 内边距自适应 */
    box-sizing: border-box;
}

.lane {
    width: 100%;
    display: flex;
    align-items: center; 
    justify-content: center;
    padding: clamp(5px, 0.8vh, 15px) 0; /* 上下padding，基于视窗高度 */
    box-sizing: border-box;
    border-bottom: 1px dashed #666; /* 分隔线颜色调深一点 */
    overflow: hidden; /* 防止内部内容溢出lane本身 */
}
.lane:last-child {
    border-bottom: none; 
}

/* 特定道的样式 - 使用flex-grow和flex-basis来更灵活地分配空间 */
.placement-lane { 
    flex-grow: 2.5; /* 允许增长的比例 */
    flex-shrink: 1; /* 允许收缩 */
    flex-basis: 0;  /* 初始大小为0，让flex-grow决定 */
    min-height: 100px; /* 保证一个最小高度 */
    display: flex; 
    justify-content: center;
    align-items: center;
}
.hand-lane { 
    flex-grow: 3; 
    flex-shrink: 1;
    flex-basis: 0;
    min-height: 120px;
    flex-direction: column; 
    background-color: rgba(0,0,0,0.1); 
    border-radius: clamp(3px, 0.5vmin, 8px);
    margin: clamp(3px, 0.5vh, 8px) 0;
}
.controls-lane {
    flex-grow: 1.5; 
    flex-shrink: 1;
    flex-basis: 0;
    min-height: 80px;
    flex-direction: column; 
    align-items: center;
    justify-content: center; 
}


h2, h3 {
    color: #FFD700; 
    text-align: center;
    margin-top: 0;
    margin-bottom: clamp(4px, 0.5vh, 10px); 
    width: 100%;
    font-size: clamp(1em, 2.2vmin, 1.8em); /* 字体大小自适应 */
}
.hand-lane h2 { 
     margin-bottom: clamp(3px, 0.5vh, 8px);
}


.hand-group {
    width: 100%; 
    max-width: clamp(200px, 40vw, 500px); /* 墩区最大宽度也自适应 */
    text-align: center;
    padding: clamp(3px, 0.5vmin, 8px);
    display: flex;
    flex-direction: column;
    align-items: center;
}

.drop-zone, .hand-area { 
    display: flex;
    flex-wrap: wrap; /* 允许卡牌换行 */
    justify-content: center; 
    align-content: flex-start; /* 多行内容时从顶部开始对齐 */
    min-height: clamp(80px, 12vh, 150px); /* 最小高度自适应 */
    width: 100%; 
    padding: clamp(4px, 0.8vmin, 10px);
    border: clamp(1px, 0.2vmin, 3px) dashed #aaa;
    border-radius: clamp(3px, 0.5vmin, 8px);
    background-color: rgba(255,255,255,0.05); 
    box-sizing: border-box;
    overflow-y: auto; /* 如果内部内容过多，允许滚动 */
}

.hand-area { /* 特指 playerHandOrMiddleDeck */
   /* overflow-y: auto; 已经统一在上面设置 */
   max-height: clamp(100px, 20vh, 200px); /* 手牌区最大高度自适应 */
}

.middle-deck-active {
    border-style: solid !important; 
    border-color: #FFD700 !important; 
    background-color: rgba(0, 80, 0, 0.2) !important; 
}
.middle-deck-active .card {
    cursor: default !important; 
}


.card {
    /* 卡牌大小使用 vmin 或固定值配合 max-width/height 组合 */
    width: clamp(45px, 6vmin, 70px);  /* 卡牌宽度自适应 */
    height: calc(clamp(45px, 6vmin, 70px) * 1.466); /*保持宽高比约 70/103 或 60/88 */
    margin: clamp(2px, 0.4vmin, 5px); /* 外边距自适应 */
    border: clamp(1px, 0.1vmin, 2px) solid #999;
    border-radius: clamp(2px, 0.3vmin, 5px);
    background-color: white;
    box-shadow: 1px 1px 3px rgba(0,0,0,0.3);
    cursor: grab;
    object-fit: contain;
    user-select: none;
    -webkit-user-drag: element;
    transition: width 0.1s, height 0.1s; /* 轻微过渡效果 */
}

.card.dragging {
    opacity: 0.5;
    transform: scale(1.05); /* 拖动时轻微放大 */
}

.drop-zone.over, .hand-area.over:not(.middle-deck-active) { 
    border-color: #FFD700; 
    background-color: rgba(255, 215, 0, 0.1); 
}

button {
    background-color: #8B4513; 
    color: white;
    border: 1px solid #cd853f; 
    padding: clamp(8px, 1.2vh, 15px) clamp(15px, 2vw, 25px); /* 内边距自适应 */
    border-radius: clamp(3px, 0.5vmin, 8px);
    cursor: pointer;
    font-size: clamp(0.9em, 2vmin, 1.5em); /* 字体大小自适应 */
    margin: clamp(5px, 0.8vh, 10px) 5px;
    min-width: clamp(100px, 15vw, 150px); /* 最小宽度自适应 */
}

button:hover {
    background-color: #A0522D; 
}
button:disabled {
    background-color: #777;
    cursor: not-allowed;
}

#messageArea {
    margin-top: clamp(5px, 1vh, 12px);
    padding: clamp(5px, 0.8vh, 10px);
    border-radius: clamp(3px, 0.5vmin, 6px);
    text-align: center;
    min-height: clamp(18px, 2.5vh, 30px); 
    width: 80%;
    max-width: clamp(250px, 50vw, 450px);
    font-size: clamp(0.8em, 1.8vmin, 1.2em);
}

#messageArea.success {
    background-color: #2E8B57; 
    color: #fff;
    border: 1px solid #3CB371;
}

#messageArea.error {
    background-color: #B22222; 
    color: #fff;
    border: 1px solid #DC143C;
}

/* 
   移除了之前的 @media query，因为 clamp() 和视窗单位提供了更流畅的自适应。
   如果需要在特定断点做布局结构大调整，可以再加回来。
*/
