/* frontend/src/assets/main.css */
/* ... (html, body, #app, desktop .card, button, input, error, App.vue布局等核心样式与上一版能成功构建的类似，并确保关键属性有 !important) ... */
/* 我将主要展示媒体查询部分的修改，其他部分请沿用上一版并确保 !important */

/* --- 媒体查询，实现平铺伸缩折叠 --- */

/* 桌面端宽屏: 初始手牌区允许多行 (保持不变) */
.initial-hand-area .card-container { /* ... */ }
.initial-hand-area .card-container .hand-card-item { /* ... */ }

@media (max-width: 1024px) { /* ... (保持不变) ... */ }

/* 手机端和平板的紧贴重叠样式 */
@media (max-width: 768px) { 
  .card, .hand-card-item {
    width: 60px !important; 
    height: 84px !important; 
    border-radius: 4px !important;
    margin: 0 !important;
  }
  .card-container { /* 通用卡片容器 */
    height: auto !important;
    gap: 0 !important; 
    padding: 6px 2px !important; /* 左右padding再减小一点 */
    overflow: hidden !important;
  }
  
  /* 特指手牌区 (初始手牌/中墩) */
  .initial-hand-area .card-container {
    height: auto !important; 
    display: flex !important; 
    flex-direction: row !important;
    flex-wrap: nowrap !important; 
    justify-content: flex-start !important; /* !!! 改为从左开始排列 !!! */
    align-items: center !important; 
    overflow-x: hidden !important; /* 仍然隐藏水平滚动条 */
    overflow-y: hidden !important;
    padding: 6px 2px !important; /* 容器左右padding */
    /* min-height 由内容决定，确保卡片高度足够 */
    min-height: calc(84px + 12px); /* 卡片高度 + 上下padding */
  }
  .initial-hand-area .card-container .hand-card-item {
    /* 卡片宽度60px。假设我们想让每张牌（除了第一张）露出 8px */
    /* 负 margin = -(卡片宽度 - 露出宽度) = -(60 - 8) = -52px */
    /* 13张牌总视觉宽度 = 60 (第一张) + 12 * 8 (后面12张各露8px) = 60 + 96 = 156px */
    /* 这个宽度应该能适应大多数手机屏幕的竖屏宽度（通常 > 300px） */
    margin-left: -52px !important; 
    box-shadow: 1px 0px 2px rgba(0,0,0,0.3) !important; /* 左侧阴影模拟层次感 */
    transition: transform 0.2s ease-out, margin-left 0.2s ease-out, z-index 0.05s linear !important;
  }
  .initial-hand-area .card-container .hand-card-item:first-child {
    margin-left: 0 !important;
  }
  .initial-hand-area .card-container .hand-card-item:hover {
    transform: translateY(-12px) scale(1.12) !important; 
    z-index: 100 !important;
    /* 当一张牌上浮时，可以给它一个正的 margin-right 来推开右边的牌 */
    /* margin-right: 30px !important; */ /* 这个需要JS配合更佳 */
  }
  /* 如果需要悬停时右边的牌也移动，纯CSS比较复杂，通常用JS */
  /* .initial-hand-area .card-container .hand-card-item:hover + .hand-card-item {
      margin-left: -25px !important; 
  } */

  /* 其他小屏幕特定样式 ... */
  .top-info-bar { font-size: 0.8em !important; }
  .submit-hand-button { font-size: 0.95em !important; }
}

@media (max-width: 480px) { /* 小手机 - 进一步重叠，每张牌露出更少，确保13张可见 */
  .card, .hand-card-item {
    width: 50px !important; 
    height: 70px !important;
    border-radius: 3px !important;
  }
  .card-container {
    height: auto !important;
    padding: 5px 1px !important;
    min-height: calc(70px + 10px);
  }
  .initial-hand-area .card-container {
    height: auto !important;
    min-height: calc(70px + 10px);
    padding-left: 4px; /* 给第一张牌留一点左边距 */
    padding-right: 4px;
  }
  .initial-hand-area .card-container .hand-card-item {
    /* 卡片宽度50px。假设我们想让每张牌（除了第一张）露出 5px */
    /* 负 margin = -(50 - 5) = -45px */
    /* 13张牌总视觉宽度 = 50 (第一张) + 12 * 5 (后面12张各露5px) = 50 + 60 = 110px */
    margin-left: -45px !important; 
  }
  .initial-hand-area .card-container .hand-card-item:first-child { margin-left: 0 !important; }

  /* 顶部信息栏垂直堆叠 (保持不变) ... */
}


/* 其他所有全局样式 (如按钮, App布局, GameBoard布局等) 请沿用上一版能成功构建的，并确保重要属性有 !important */
/* ... (此处省略以保持简洁) ... */
