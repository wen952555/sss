/* frontend/src/App.css */

/* --- 全局与基础布局 (保持不变) --- */
/* ... */

/* --- 顶部玩家状态横幅 (保持不变) --- */
/* ... */

/* --- 游戏板与牌道区域 (保持不变) --- */
/* ... */
.card { /* 主游戏区的卡牌样式 */
  width: 55px; 
  height: 77px;
  border-radius: 4px; 
  overflow: hidden; 
  box-shadow: 2px 2px 5px rgba(0,0,0,0.3); 
  background-color: white; /* 主游戏区卡牌保留白色背景 */
  flex-shrink: 0; 
  user-select: none; 
  position: relative; 
  transition: transform 0.18s cubic-bezier(0.22, 0.61, 0.36, 1), 
              box-shadow 0.18s cubic-bezier(0.22, 0.61, 0.36, 1);
}
/* ... */


/* --- 比牌结果模态框样式 --- */
.comparison-view-container { /* ... (保持不变) ... */ }
.modal-content.comparison-modal-content { /* ... (保持不变) ... */ }
.modal-close-button.top-right-close { /* ... (保持不变) ... */ }
.comparison-modal-content h2 { /* ... (保持不变) ... */ }
.comparison-grid { /* ... (保持不变) ... */ }
.comparison-cell { /* ... (保持不变, 但内部卡牌样式会改变) ... */ }
.comparison-cell.empty { /* ... (保持不变) ... */ }
.human-player-cell { /* ... (保持不变) ... */ }
.comparison-cell h4 { /* ... (保持不变) ... */ }
.score-summary { /* ... (保持不变) ... */ }
.comparison-hand-verticals { /* 这个类名来自您提供的JS，确保CSS中有对应 */
  display: flex;
  flex-direction: column; /* 三道牌垂直排列 */
  align-items: center; /* 每道牌居中 */
  width: 100%;
  gap: 10px; /* 各道之间的垂直间距 */
}
.comparison-hand-row { 
  display: flex; 
  align-items: center; /* 文字和卡牌垂直居中 */
  width: 100%; 
  gap: 8px; /* 文字和mini-cards容器的间距 */
  justify-content: flex-start; /* 文字和卡牌都靠左 */
}
.comparison-hand-row strong { 
  font-size: 0.9em; /* 调整文字大小 */
  white-space: nowrap;
  width: 3.5em; /* 给 "头道:" 等文字一个固定宽度，方便对齐 */
  text-align: right; /* 文字右对齐 */
  opacity: 0.9;
  color: #a0aec0; /* 稍暗的颜色 */
}

/* 应用于 renderExpandedCards 返回的 div */
.mini-cards {
  /* display, gap, align-items, position, height, min-height 由JS内联样式设置 */
  flex-grow: 1; /* 允许卡牌容器占据剩余空间 */
  justify-content: flex-start; /* 确保卡牌从左开始排列 */
  /* overflow: hidden; */ /* 如果卡牌总宽度超过，避免出现滚动条，但这可能导致卡牌被切 */
}

/* 关键修改：比牌界面中的静态卡牌，移除背景和边框 */
.comparison-cell .static-card {
  /* width 和 height 由JS动态设置 */
  /* position: relative; 也由JS的style prop或默认行为处理 */
  box-shadow: none !important; /* 移除阴影 */
  border-radius: 3px;      /* 轻微圆角，如果SVG内容本身没有 */
  background: transparent !important; /* 关键：背景透明 */
  margin: 0;
  z-index: 1;
  transition: transform 0.15s ease-out; /* 保留悬浮放大效果 */
  border: none !important;     /* 关键：移除边框 */
  display: flex; 
  align-items: center;
  justify-content: center;
  /* flex-shrink: 0; */ /* 确保在flex布局中不被压缩，如果需要的话 */
}
.comparison-cell .static-card img {
  width: 100%;
  height: 100%;
  border-radius: inherit; /* 图片继承卡牌的圆角 */
  display: block;
  object-fit: contain;
  box-shadow: none !important;
  background: none !important;
  /* border: none !important; */ /* img本身通常不需要边框 */
}
.comparison-cell .static-card:hover {
  z-index: 10;
  transform: scale(1.1) translateY(-3px); /* 调整悬浮效果 */
}

/* 静态卡牌的占位符也需要透明背景和无边框 */
.comparison-cell .static-card-placeholder {
    /* width 和 height 由JS动态设置 */
    border: 1px dashed rgba(255,255,255,0.2) !important; /* 如果需要一个非常淡的占位符边框 */
    background: transparent !important;
    color: rgba(255,255,255,0.3);
    /* ... 其他占位符样式 ... */
}
.comparison-cell .image-error-text {
    /* ... 保持之前的错误文本样式 ... */
}

.shoot-info { /* ... (保持不变) ... */ }
.modal-actions { /* ... (保持不变) ... */ }
.continue-game-button { /* ... (保持不变) ... */ }

/* --- 响应式调整 (需要重新评估以适应新的卡牌显示方式) --- */
@media (max-width: 768px) {
    /* ... (主游戏区的响应式调整) ... */
    .comparison-grid { grid-template-columns: 1fr; /* 小屏幕单列 */ gap: 8px; }
    .comparison-cell { padding: 8px; min-height: auto; }
    /* .comparison-cell .static-card 的尺寸由JS的renderExpandedCards控制 */
}
@media (max-width: 480px) {
    /* ... (主游戏区的响应式调整) ... */
    /* .comparison-cell .static-card 的尺寸由JS的renderExpandedCards控制 */
}
