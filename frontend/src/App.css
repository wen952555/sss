html, body, #root {
  height: 100%;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  overflow: hidden; /* --- 修改点：全局禁止滚动条 --- */
}

body {
  font-family: Arial, sans-serif;
  background-color: #2c593b;
  color: white;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 10px; /* 保持一些边距 */
  /* overflow-y: auto;  <-- 移除 */
}

.app-container {
  width: 100%;
  max-width: 1200px;
  display: flex;
  flex-direction: column;
  height: 100%; /* 尝试占据全部可用高度 */
  box-sizing: border-box;
  overflow: hidden; /* --- 修改点：禁止 app-container 内部滚动 --- */
}

.game-board {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  flex-grow: 1; /* 占据剩余垂直空间 */
  /* overflow-y: auto; <-- 移除 */
  padding: 15px;
  background-color: rgba(0,0,0,0.05);
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);
  box-sizing: border-box;
  overflow: hidden; /* --- 修改点：禁止 game-board 内部滚动 --- */
}

.arranged-hands-area.banners-layout {
  display: flex;
  flex-direction: column;
  gap: 10px; /* 减少横幅间距以节省空间 */
  width: 100%;
  margin-bottom: 15px; /* 减少与按钮区域的间距 */
  flex-shrink: 0;
  overflow: hidden; /* --- 修改点：确保此区域不产生滚动 --- */
}

.hand-banner {
  width: 100%;
  padding: 8px; /* 减少内边距 */
  border: 1px solid #4a755a;
  border-radius: 5px;
  background-color: rgba(0,0,0,0.15);
  min-height: 110px; /* 稍微减小最小高度，具体数值需根据卡片大小调整 */
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  overflow: hidden; /* --- 修改点：禁止牌墩内部滚动 --- */
}

.hand-banner h4 {
    margin-top: 0;
    margin-bottom: 8px; /* 减少间距 */
    padding: 6px 10px; /* 减少内边距 */
    font-size: 0.9em; /* 减小字体 */
    /* 其他样式保持 */
    background-color: rgba(255,255,255,0.08);
    color: #e0e0e0;
    border-radius: 3px;
    box-sizing: border-box;
    flex-shrink: 0;
}

.droppable-area {
  display: flex;
  /* flex-wrap: nowrap; <-- 可以保持 nowrap，也可以移除让 flex item 自动处理 */
  /* overflow-x: auto;   <-- 移除，不再允许横向滚动 */
  /* overflow-y: hidden; <-- 移除 */
  align-items: flex-start;
  padding: 5px; /* 减少内边距 */
  flex-grow: 1;
  background-color: rgba(0,0,0,0.1);
  border-radius: 4px;
  width: 100%;
  box-sizing: border-box;
  overflow: hidden; /* --- 修改点：确保此区域不产生滚动 --- */
  position: relative; /* 为了卡片堆叠定位 */
}

.droppable-area.is-dragging-over {
  background-color: rgba(0,0,0,0.3);
}

.card {
  width: 60px;  /* 进一步减小卡片基础宽度 */
  height: 84px; /* 根据宽度调整高度以保持比例 */
  border: 1px solid #777;
  border-radius: 5px;
  box-shadow: 1px 1px 3px rgba(0,0,0,0.2); /* 减小阴影 */
  background-color: white;
  user-select: none;
  flex-shrink: 0;
  cursor: grab;
  transition: transform 0.1s ease-out, margin-left 0.1s ease-out; /* 为堆叠效果添加过渡 */
  position: relative; /* 允许 z-index 生效 (如果需要控制堆叠顺序) */
  z-index: 1; /* 基础 z-index */
}

/* --- 新增：卡片堆叠效果 --- */
.droppable-area .card + .card { /* 选择不是第一个的卡片 */
  margin-left: -45px; /* 负边距实现堆叠，这个值需要仔细调整 */
                      /* 值越大，堆叠越紧密，露出的部分越少 */
                      /* 值应该是 卡片宽度 - 希望露出的宽度 */
}

/* 拖拽时的卡片样式，确保在最上层，并且不应用堆叠的负 margin */
.card.is-dragging-placeholder { /* react-beautiful-dnd 拖拽时占位符的类名 (可能需要确认) */
    /* visibility: hidden; */ /* 或者其他处理方式 */
}
/* react-beautiful-dnd 实际拖拽的卡片通常会被提升到 body 下，并有自己的样式 */


.card:active {
    cursor: grabbing;
    transform: scale(1.05); /* 拖动时轻微放大 */
    z-index: 10; /* 拖动时在最上层 */
}

.card img {
  width: 100%;
  height: 100%;
  display: block;
  border-radius: 4px;
  object-fit: contain;
}

.card-placeholder {
  min-width: 60px;
  height: 84px;
  border: 2px dashed #5a8a6a;
  border-radius: 5px;
  background-color: rgba(255,255,255,0.03);
  display: flex;
  align-items: center;
  justify-content: center;
  color: #9dbba7;
  font-size: 0.7em; /* 减小字体 */
  padding: 3px; /* 减少内边距 */
  box-sizing: border-box;
  text-align: center;
  flex-shrink: 0;
  margin-right: auto;
}

.controls {
  width: 100%;
  padding: 10px 0; /* 减少内边距 */
  text-align: center;
  background-color: rgba(0,0,0,0.1);
  border-top: 1px solid #4a755a;
  margin-top: auto;
  flex-shrink: 0;
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
}

.controls button {
  padding: 10px 20px; /* 减少按钮内边距 */
  font-size: 0.9em; /* 减小字体 */
  /* 其他样式保持 */
  margin: 0 8px;
  cursor: pointer;
  background-color: #e67e22;
  color: white;
  border: none;
  border-radius: 5px;
  font-weight: bold;
  transition: background-color 0.2s ease;
}
/* ... (其他 .controls button 状态样式保持) ... */
/* ... (message-area, hand-eval-text, loading-indicator 样式可以适当调整字体大小和边距以节省空间) ... */

.message-area {
  margin: 10px auto;
  padding: 10px;
  font-size: 0.9em;
  /* 其他样式保持 */
  border-radius: 5px;
  text-align: center;
  width: 90%;
  max-width: 500px;
  box-sizing: border-box;
}
.message-area.success { background-color: #27ae60; color: white; }
.message-area.error { background-color: #c0392b; color: white; }

.hand-eval-text {
    font-size: 0.85em;
    margin-top: 6px;
    padding-left: 8px;
    /* 其他样式保持 */
    color: #f0f0f0;
    min-height: 18px;
    text-align: left;
    flex-shrink: 0;
}
.loading-indicator {
    margin-top: 10px;
    padding: 8px;
    font-size: 0.9em;
    /* 其他样式保持 */
    color: #e67e22;
    font-weight: bold;
}


/* 响应式调整：移除，因为全局不允许滚动，需要在基础样式中就处理好空间问题 */
/* 或者，如果仍然需要响应式，这里的调整会更侧重于改变堆叠程度 (负 margin) 和卡片大小 */
@media (max-width: 768px) {
  .hand-banner { min-height: 105px; }
  .card { width: 55px; height: 77px; }
  .droppable-area .card + .card { margin-left: -40px; } /* 调整堆叠程度 */
  .card-placeholder { min-width: 55px; height: 77px; }
  /* ... 其他微调 ... */
}

@media (max-width: 480px) {
  .hand-banner { min-height: 95px; }
  .card { width: 48px; height: 67px; }
  .droppable-area .card + .card { margin-left: -35px; } /* 再次调整堆叠程度 */
  .card-placeholder { min-width: 48px; height: 67px; }
  .controls button { font-size: 0.8em; padding: 8px 15px; }
  /* ... 其他微调 ... */
}
