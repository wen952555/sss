/* frontend/src/App.css */

/* --- 全局与基础布局 (保持不变) --- */
body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, ऑक्सीजन, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; background-color: #073b4c; color: #f1f1f1; margin: 0; padding: 0; box-sizing: border-box; }
*, *::before, *::after { box-sizing: inherit; }
.app-container { display: flex; flex-direction: column; align-items: center; width: 100%; min-height: 100vh; padding: 15px; }

/* --- 顶部玩家状态横幅 (保持不变) --- */
.top-banner-container { /* ... */ }
/* ... (AIPlayerDisplay 和 HumanPlayerBannerDisplay 的样式保持不变) ... */


/* --- 游戏板与牌道区域 --- */
.game-board { 
  display: flex; 
  flex-direction: column; 
  gap: 20px; /* 牌道之间的垂直间距 */
  padding: 20px; 
  background-color: rgba(0, 0, 0, 0.35); 
  border-radius: 16px; 
  box-shadow: 0 6px 20px rgba(0,0,0,0.35); 
  width: 100%; 
  max-width: 720px; /* 游戏板宽度可以稍大以容纳更大的牌 */
  margin-top: 25px; /* 与顶部横幅的间距 */
}

/* 包裹三个牌道区域的容器 - 这个不再需要，hand-area-zone 直接作为子元素 */
/* .hand-lanes-container { ... } */

/* 单个牌道的整体区域 */
.hand-area-zone {
  /* 如果需要每个牌道有外边框或特定背景，可以在这里设置 */
}

/* 牌道内的 Droppable 区域 (实际容纳卡牌和文字的区域) */
.hand-area {
  background-color: rgba(0, 0, 0, 0.2); /* 加深一点背景，使其与game-board区分 */
  padding: 15px; /* 增加内边距，为文字和更大的卡牌提供空间 */
  border-radius: 10px; /* 更大的圆角 */
  min-height: 150px; /* 显著增加最小高度 (大卡牌高度 + 文字 + padding) */
  display: flex;
  flex-direction: column; /* 主要方向改为垂直：文字信息在上，卡牌在下 */
  /* 或者 flex-direction: row; align-items: flex-start; 如果希望文字和卡牌左右排列 */
  gap: 10px; /* 文字信息和卡牌之间的间隙 */
  transition: background-color 0.25s ease-in-out, box-shadow 0.25s ease;
  position: relative; /* 如果内部元素需要绝对定位 */
}

/* 文字信息容器 (在 hand-area 内部) */
.hand-info-internal {
  display: flex;
  justify-content: space-between; /* 标题居左，牌型居右 */
  align-items: center;
  width: 100%;
  /* margin-bottom: 10px; */ /* 这个间隙由 hand-area 的 gap 控制 */
  padding: 0 5px; /* 轻微内边距 */
}

.hand-area-title-internal { /* 牌道标题，如 "头道 (3/3)" */
  color: #ffd166;
  font-weight: 600;
  font-size: 1.1em;
  margin: 0;
}

.hand-type-display-internal { /* 牌型名称，如 "乌龙" */
  font-size: 1em; /* 增大牌型字号 */
  color: #f1f1f1;
  background-color: rgba(0,0,0,0.5);
  padding: 4px 10px;
  border-radius: 5px;
  font-weight: 500;
}

/* 卡牌容器 (如果需要一个专门的容器来应用flex换行等) */
/* .cards-container-internal { 
    display: flex;
    flex-wrap: nowrap; // 默认不换行
    justify-content: center;
    align-items: center;
    gap: 8px;
    width: 100%;
} */

/* 如果 hand-area 的 flex-direction 是 column, 卡牌会自然占据剩余宽度 */
/* 如果 hand-area 是 row, 那么卡牌会和 hand-info-internal 并列 */
/* 我们这里假设 hand-area 是 column，然后卡牌在其内部再用 flex row 排列 */
/* 所以，直接对 .hand-area 的子元素（即卡牌）应用 flex 规则 */
.hand-area > .card, /* 直接子元素卡牌 */
.hand-area > div[data-rbd-placeholder-context-id] { /* dnd 的 placeholder */
  /* 这个选择器可能不够通用，如果卡牌被包裹在其他div里，需要调整 */
}

/* 对于 .hand-area.allow-wrapping (手牌区)，我们需要让内部的卡牌换行 */
.hand-area.allow-wrapping {
  /* flex-direction: column; */ /* 保持 column，让 hand-info-internal 在上方 */
  /* 然后让内部的卡牌自己换行 */
  /* 这意味着卡牌不能直接是 .hand-area 的子元素来实现换行，需要一个包裹层 */
  /* 或者 .hand-area 本身作为卡牌的 flex 容器，文字用绝对定位 */
  
  /* 方案：让 .hand-area 整体是 flex-wrap: wrap 来排列卡牌，文字信息用绝对定位 */
  flex-direction: row; /* 改回 row，让卡牌可以横向排列和换行 */
  flex-wrap: wrap;
  justify-content: center; /* 或 flex-start */
  align-items: flex-start; /* 卡牌从顶部开始 */
  min-height: 220px; /* 至少两行大卡牌的高度 */
  padding-top: 45px; /* 为绝对定位的文字信息留出空间 */
  position: relative; /* 确保 hand-info-internal 可以相对于它定位 */
}

.hand-area.allow-wrapping .hand-info-internal { /* 手牌区文字信息绝对定位到顶部 */
  position: absolute;
  top: 10px;
  left: 15px;
  right: 15px;
  /* display: flex; justify-content: space-between; align-items: center; */ /* 已有 */
  z-index: 1; /* 确保在卡牌之上，如果卡牌也有z-index */
}
/* 如果手牌区也希望文字和卡牌用flex column，则 hand-area.allow-wrapping 保持 column，
   然后内部需要一个 .cards-wrapper 来做 flex-row 和 flex-wrap */


.hand-area:not(.allow-wrapping) { /* 头道、尾道、中道 (非手牌时) */
  /* flex-direction: column; */ /* 保持 column */
  /* 内部卡牌容器需要横向排列不换行 */
  /* 或者 .hand-area 是 row，然后 justify-content: center */
  flex-direction: row; /* 改为 row，让文字和卡牌都在一行里，或文字绝对定位 */
  justify-content: center;
  align-items: center; /* 卡牌和文字垂直居中 */
  flex-wrap: nowrap;
  padding-top: 15px; /* 恢复正常padding */
}
.hand-area:not(.allow-wrapping) .hand-info-internal {
  position: absolute; /* 固定道文字也用绝对定位 */
  top: 10px;
  left: 15px;
  right: 15px;
  /* 或者使用 order 属性，如果 hand-area 是 flex: row */
  /* order: -1; margin-right: 15px; */ /* 将文字放在卡牌左边 */
}


.hand-area.droppable-active { background-color: rgba(66, 153, 225, 0.3); box-shadow: inset 0 0 10px rgba(66, 153, 225, 0.2); }


/* --- 卡牌样式 (增大尺寸) --- */
.card {
  width: 80px;  /* 显著增大卡牌宽度 */
  height: 112px; /* 保持比例 (80 * 1.4) */
  border-radius: 6px; /* 匹配更大的尺寸 */
  /* ... (其他基础 .card 样式保持不变) ... */
  box-shadow: 3px 3px 8px rgba(0,0,0,0.4);
  background-color: white; 
  flex-shrink: 0; 
  user-select: none; 
  position: relative; 
  transition: transform 0.2s cubic-bezier(0.22, 0.61, 0.36, 1), 
              box-shadow 0.2s cubic-bezier(0.22, 0.61, 0.36, 1);
}
.card:not(.static-card) { cursor: grab; }
.card img { width: 100%; height: 100%; display: block; object-fit: contain; }
.card:not(.static-card):hover:not(.dragging) { transform: translateY(-4px) scale(1.05); box-shadow: 4px 6px 12px rgba(0,0,0,0.35); }
.card:not(.static-card):active, .card.dragging { cursor: grabbing; transform: scale(1.15) rotate(4deg) translateY(-3px); box-shadow: 5px 8px 15px rgba(0,0,0,0.5); z-index: 1000; }


/* --- 控制按钮区域 (保持不变) --- */
.controls { /* ... */ }
/* ... (GameButton 样式保持不变) ... */


/* --- 比牌结果模态框样式 (卡牌尺寸可能需要微调以适应新的主界面卡牌大小) --- */
.modal-overlay { /* ... */ }
/* ... (其余模态框相关样式) ... */
.comparison-cell .static-card { /* 模态框中的卡牌可以保持之前的小尺寸或按比例调整 */
  width: 42px; 
  height: 59px; 
  /* ... */
}


/* --- 响应式调整 --- */
@media (max-width: 768px) {
  .game-board { max-width: 95%; padding: 15px; gap: 15px; }
  .hand-area { padding: 10px; min-height: 120px; /* 根据新卡牌尺寸调整 */ gap: 8px; }
  .hand-area.allow-wrapping { min-height: 190px; padding-top: 40px; } /* (新卡牌高度*2 + gap) + 文字空间 */
  .hand-area:not(.allow-wrapping) { padding-top: 10px; }
  .hand-info-internal { /* 可能需要调整文字和牌型的相对位置/大小 */ }
  .hand-area-title-internal { font-size: 1em; }
  .hand-type-display-internal { font-size: 0.9em; padding: 3px 8px;}

  .card {
    width: 65px;  /* 响应式缩小卡牌 */
    height: 91px;
  }
  /* ... (其他组件的响应式调整) ... */
}

@media (max-width: 480px) {
  .game-board { padding: 10px; gap: 10px; }
  .hand-area { min-height: 100px; gap: 5px; }
  .hand-area.allow-wrapping { min-height: 160px; padding-top: 35px; }
  .card {
    width: 50px;
    height: 70px;
  }
  /* ... */
}
