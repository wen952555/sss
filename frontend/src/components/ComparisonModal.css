/* frontend_react/src/components/ComparisonModal.css */
.comparison-modal-overlay-fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  padding: 5px;
  box-sizing: border-box;
}

.comparison-modal-content-fullscreen {
  background-color: #f0f2f5;
  width: 100%;
  height: 100%;
  max-width: 1200px;
  max-height: 98vh;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  box-sizing: border-box;
  border-radius: 6px;
  box-shadow: 0 5px 20px rgba(0,0,0,0.2);
  overflow: hidden;
}

.comparison-modal-title {
  text-align: center;
  color: #333;
  font-size: 1.5em;
  padding: 12px 0;
  margin: 0;
  background-color: #ffffff;
  border-bottom: 1px solid #d9d9d9;
  flex-shrink: 0;
}

.players-grid-layout-modal {
  display: grid;
  grid-template-columns: 1fr; /* Mobile first: 1 column */
  gap: 10px;
  padding: 10px;
  flex-grow: 1;
  overflow-y: auto;
  align-content: start;
}

.player-result-cell {
  background-color: #ffffff;
  border: 1px solid #d9d9d9;
  border-radius: 5px;
  padding: 10px;
  box-shadow: 0 1px 2px rgba(0,0,0,0.04);
  display: flex;
  flex-direction: column;
  gap: 8px;
}
.player-result-cell.empty-player-cell {
  /* Styles for empty cells if needed */
}
.player-result-cell.error-cell { /* Styles for error cell */ }

.player-name-modal { /* Styles for player name */ }
.player-total-score-modal { /* Styles for player score */ }

.dun-section-modal-with-corner-text {
  position: relative;
  padding: 8px;
  background-color: #f8f9fa;
  border-radius: 4px;
  margin-bottom: 10px;
}
.dun-section-modal-with-corner-text:last-child { margin-bottom: 0; }

.dun-cards-container-modal {
  display: flex; /* Use flex for basic alignment */
  position: relative; /* For absolute positioning of cards in stack */
  min-height: 75px; /* Adjust based on card height + overlap */
  align-items: flex-start; /* Align cards to the top */
  padding-left: 5px; /* Initial indent for the first card */
}

/* Default card style (will be base for wide screen) */
.dun-cards-container-modal .card {
  width: 65px;
  height: 98px;
  cursor: default;
  border: 1px solid #ccc;
  background-color: white;
  box-shadow: 0 1px 2px rgba(0,0,0,0.1);
  margin-right: 4px; /* Spacing for flat display */
  position: relative; /* For z-index to work if needed */
}
.dun-cards-container-modal .card:last-child {
  margin-right: 0;
}


.dun-info-corner-modal { /* For "头道: 牌型" text */ }
.dun-title-corner { /* For "头道:" */ }
.dun-type-corner { /* For牌型名称 like "一对" */ }

.comparison-modal-footer { /* Styles for footer */ }
.continue-game-button { /* Styles for button */ }


/* --- Responsive: Media Queries --- */

/* Narrow screens: STACKED cards (improved stacking) */
@media (max-width: 767px) {
  .players-grid-layout-modal {
    grid-template-columns: 1fr;
  }

  .dun-cards-container-modal {
    /* min-height might need to be sum of (visible card height + (N-1)*vertical_offset) */
    /* For simplicity, let's try a fixed height that looks okay for up to 5 cards stacked */
    min-height: 120px; /* Increased to allow some vertical stacking room */
    align-items: flex-start; /* Cards stack from top-left */
    padding-left: 0; /* Reset padding if cards are absolutely positioned */
  }

  .dun-cards-container-modal .card {
    width: 50px;  /* Smaller card width for stacking */
    height: 72px; /* Smaller card height for stacking */
    border: 1px solid #bbb;
    box-shadow: 1px 1px 2px rgba(0,0,0,0.2);
    position: absolute; /* Use absolute positioning for fine-grained stacking */
    /* margin-left is removed, position controlled by 'left' and 'top' */
    margin-right: 0; /* No right margin when stacked */
  }

  /* Dynamically apply transform or top/left in JS might be better,
     but for CSS only, we can use :nth-child for a fixed number of cards.
     This is a simplified阶梯式堆叠 (not perfect fan).
     This CSS assumes up to 5 cards (for 中道/尾道).
     Adjust `left` and `top` increments as needed.
  */
  .dun-cards-container-modal .card:nth-child(1) { left: 5px; top: 5px; z-index: 1; }
  .dun-cards-container-modal .card:nth-child(2) { left: 20px; top: 8px; z-index: 2; } /* overlap 30px horizontal, 3px vertical */
  .dun-cards-container-modal .card:nth-child(3) { left: 35px; top: 11px; z-index: 3; }
  .dun-cards-container-modal .card:nth-child(4) { left: 50px; top: 14px; z-index: 4; }
  .dun-cards-container-modal .card:nth-child(5) { left: 65px; top: 17px; z-index: 5; }


  .dun-info-corner-modal {
    font-size: 0.75em;
    padding: 1px 4px;
    top: 3px;
    right: 5px;
    /* Ensure it's above the absolutely positioned cards if they could overlap */
    z-index: 6; /* Higher than the max card z-index */
  }
}


/* Wider screens (tablets and up): 2x2 grid for players, flat cards */
@media (min-width: 768px) {
  .comparison-modal-overlay-fullscreen { /* Styles for overlay */ }
  .comparison-modal-content-fullscreen { /* Styles for content */ }
  .players-grid-layout-modal {
    grid-template-columns: repeat(2, 1fr);
    padding: 20px;
    gap: 20px;
  }
  .comparison-modal-title { /* Styles for title */ }
  
  .dun-cards-container-modal {
    justify-content: center; /* Center flat cards */
    min-height: 98px; /* Based on larger card height */
    position: static; /* Reset from absolute stacking context */
  }

  .dun-cards-container-modal .card {
    width: 65px; 
    height: 98px;
    position: static; /* Reset from absolute */
    left: auto; /* Reset */
    top: auto;  /* Reset */
    z-index: auto; /* Reset */
    margin-left: 0;
    margin-right: 4px;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
  }
   .dun-cards-container-modal .card:last-child { margin-right: 0; }

   .dun-info-corner-modal { /* Styles for corner info */ }
   .continue-game-button { /* Styles for button */ }
}
