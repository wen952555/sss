/* frontend/css/style.css (调整牌桌主要区域高度) */

* { margin: 0; padding: 0; box-sizing: border-box; }
body {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    background-color: #f0f2f5;
    color: #1c1e21;
    line-height: 1.5;
    padding: 10px;
    display: flex;
    flex-direction: column;
    min-height: calc(100vh - 20px); /* body 至少和视口一样高 */
}

main.game-container {
    max-width: 650px; /* <<--- 可以再适当减小一点宽度，让垂直空间更突出 */
    width: 100%;
    margin: auto; /* 垂直和水平居中 */
    padding: 15px;
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    display: flex; /* 允许内部的 #gameTable 垂直伸展 */
    flex-direction: column;
    flex-grow: 1; /* 占据 body 中剩余的垂直空间 */
    overflow: hidden; /* 防止内容溢出 game-container */
}

#gameTable {
    display: flex;
    flex-direction: column; /* 内部元素垂直排列 */
    gap: 10px; /* 主要区域之间的间距 */
    flex-grow: 1; /* 占据 game-container 中剩余的垂直空间 */
    /* border: 1px solid red; */ /* 临时：用于调试gameTable的边界 */
}

.ai-player-display-area {
    display: flex;
    justify-content: space-around;
    gap: 10px;
    /* margin-bottom: 10px; */ /* 通过 #gameTable的gap控制 */
    flex-shrink: 0; /* 防止AI区域在空间不足时被过度压缩 */
}
.player-info-box { /* ... (保持或微调) ... */ }

/* --- 核心摆牌区 --- */
.player-arrangement-zone {
    display: flex;
    flex-direction: column;
    align-items: center; /* 内部墩位居中 */
    gap: 10px;
    padding: 10px 5px; /* 左右padding减小 */
    border: 1px solid #dfe3e8;
    border-radius: 6px;
    background-color: #f5f6f7;
    flex-grow: 3; /* <<--- 关键：让摆牌区占据更多的可用垂直空间 (相对 feedback-and-actions-area) */
    /* border: 1px solid blue; */ /* 临时：调试摆牌区边界 */
    min-height: 350px; /* <<--- 给一个最小高度，确保即使内容少也不会太扁 */
    overflow-y: auto; /* 如果内部内容真的超出，允许垂直滚动（理论上应该通过调整子元素避免） */
}

.dun-section {
    width: 100%;
    max-width: 400px;
    text-align: center;
    /* margin-bottom: 5px; */ /* 通过父级gap控制 */
    display: flex; /* 让内部的 .hand-container 能更好地控制宽度 */
    flex-direction: column;
    align-items: center;
}
/* 移除了 dun-section h4 的样式 */

.human-player-hand-area {
    width: 100%;
    display: flex; /* 让内部的 #myHandDisplay 能更好地控制宽度 */
    flex-direction: column;
    align-items: center;
    /* flex-grow: 1; */ /* 允许手牌/中墩区域在摆牌区内有一定的弹性 */
    min-height: 190px; /* 确保手牌区至少有两行牌的高度 */
}
/* ... (is-middle-dun-active 样式不变) ... */
/* ... (h3 样式不变，如果还用的话，但现在文字在伪元素上) ... */


/* --- 卡牌容器 (手牌区和墩位) --- */
.hand-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    padding: 20px 8px 8px 8px; /* 顶部padding给伪元素文字 */
    border: 2px dashed #bcc0c4;
    border-radius: 5px;
    background-color: #fff;
    position: relative;
    width: 100%; /* 占满其父级 (.dun-section 或 .human-player-hand-area 内的宽度，如果父级有宽度限制) */
    box-sizing: border-box;
    /* flex-grow: 1; */ /* 允许容器在父级flex项中伸展 */
    /* min-height 由内容或特定ID决定 */
}

.hand-container::before { /* ... (伪元素样式不变) ... */ }

#headDun.hand-container,
#tailDun.hand-container {
    min-height: 85px; /* 至少一张牌高 + padding */
    width: 90%; /* 占父级（.dun-section）的90% */
    max-width: 300px; /* 给个上限，避免在非常宽的.dun-section中也无限宽 */
}
#myHandDisplay.hand-container {
    min-height: 180px; /* 至少两行牌 */
    width: 95%; /* 占父级（.human-player-hand-area）的95% */
    max-width: 550px; /* 给个上限 */
    border-color: #3b5998;
    background-color: #e7f3ff;
    align-content: flex-start;
}
#myHandDisplay.is-middle-dun-active { /* ... */ }
#myHandDisplay.is-middle-dun-active::before { /* ... */ }
#myHandDisplay:not(.is-middle-dun-active)::before { /* ... */ }


.droppable-area.drag-over { /* ... */ }

.card { width: 50px; height: 70px; margin: 3px; /* ... (其他不变) ... */ }
.card img { /* ... */ }
.card.dragging { /* ... */ }
.card-error-placeholder, .card-image-error-text { /* ... */ }


/* --- 消息和操作区 --- */
.feedback-and-actions-area {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    padding-top: 15px; /* 与摆牌区的上边距 */
    /* border: 1px solid green; */ /* 临时：调试此区域边界 */
    flex-grow: 1;  /* <<--- 关键：让这个区域占据剩余的垂直空间 */
    justify-content: flex-end; /* <<--- 让内部内容（按钮等）尽量靠底部 */
    min-height: 100px; /* 给一个最小高度，确保按钮不会太挤 */
}
.message { /* ... (保持或微调) ... */ }
.game-actions {
    margin-top: auto; /* <<--- 如果想让按钮更靠下，可以尝试这个，但justify-content:flex-end更直接 */
    margin-bottom: 10px; /* 按钮与底部的间距 */
    width: 100%;
    text-align: center;
}
.game-actions button { /* ... */ }
#resultDetails { /* ... (保持或微调) ... */ }
