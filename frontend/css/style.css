/* frontend/css/style.css (调整墩位容器高度以占满分配空间) */

* { margin: 0; padding: 0; box-sizing: border-box; }
html { height: 100%; }
body {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    background-color: #f0f2f5;
    color: #1c1e21;
    line-height: 1.5;
    padding: 10px;
    display: flex;
    flex-direction: column;
    min-height: 100%;
}

main.game-container {
    max-width: 600px; /* <<--- 可以再尝试减小一点，让垂直感更强 */
    width: 100%;
    margin: auto;
    padding: 15px;
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    overflow: hidden;
}

#gameTable {
    display: flex;
    flex-direction: column;
    gap: 10px;
    flex-grow: 1;
    overflow: hidden;
}

.ai-player-display-area { /* ... (保持不变) ... */ }
.player-info-box { /* ... (保持不变) ... */ }

/* --- 核心摆牌区 --- */
.player-arrangement-zone {
    display: flex;
    flex-direction: column;
    align-items: center; /* 内部的 .dun-section 和 .human-player-hand-area 在横轴居中 */
    gap: 10px; /* 头、中、尾墩之间的垂直间距 */
    padding: 8px 5px;
    border: 1px solid #dfe3e8;
    border-radius: 6px;
    background-color: #f5f6f7;
    flex-grow: 3; /* 这个区域占据较多垂直空间 */
    min-height: 380px; /* <<--- 稍微增加最小高度，确保有足够空间分配 */
    overflow: hidden; /* <<--- 改为 hidden，不希望这个区域本身滚动，让内部的 .hand-container 去适应 */
}

.dun-section { /* 包裹头墩和尾墩的 .hand-container 的容器 */
    width: 100%;
    max-width: 380px; /* 保持一个合理的墩位最大宽度 */
    display: flex; /* 使其子元素 .hand-container 能使用 flex-grow */
    flex-direction: column;
    flex-grow: 1; /* <<--- 关键：让每个墩section参与分配父级(arrangement-zone)的垂直空间 */
    /* border: 1px dotted green; */ /* 调试用 */
}
.dun-section.top-dun { flex-grow: 1; }   /* 头墩分配比例 */
.dun-section.bottom-dun { flex-grow: 1; } /* 尾墩分配比例 */


.human-player-hand-area { /* 包裹 #myHandDisplay 的容器 */
    width: 100%;
    max-width: 550px; /* 手牌区可以更宽 */
    display: flex; /* 使其子元素 .hand-container 能使用 flex-grow */
    flex-direction: column;
    flex-grow: 2; /* <<--- 关键：让手牌/中墩区域分配更多垂直空间 */
    /* border: 1px dotted blue; */ /* 调试用 */
}
/* is-middle-dun-active 样式不变 */

/* --- 卡牌容器 (手牌区和墩位) --- */
.hand-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center; /* 卡牌在容器内垂直居中 */
    padding: 22px 8px 8px 8px;
    border: 2px dashed #bcc0c4;
    border-radius: 5px;
    background-color: #fff;
    position: relative;
    width: 100%;
    box-sizing: border-box;
    flex-grow: 1; /* <<--- 关键：让卡牌容器填满其父级 (.dun-section 或 .human-player-hand-area) 分配给它的空间 */
    overflow-y: auto; /* <<--- 如果卡牌确实很多，允许这个容器内部滚动 (特别是手牌区) */
    min-height: 78px; /* 至少能容纳一行牌的高度 (70牌高 + 2*3边距 + 2*1内边距) */
}

.hand-container::before { /* 伪元素文字样式不变 */
    content: attr(data-dun-label) " " attr(data-dun-type);
    position: absolute; top: 3px; left: 50%; transform: translateX(-50%);
    font-size: 0.8em; color: #606770; padding: 1px 5px;
    background-color: rgba(245, 246, 247, 0.85);
    border-radius: 3px; z-index: 1; pointer-events: none; white-space: nowrap;
    font-weight: 600;
}

#headDun.hand-container {
    /* min-height, max-width 现在更多由 flex-grow 和父级控制 */
}
#tailDun.hand-container {
    /* min-height, max-width 现在更多由 flex-grow 和父级控制 */
}
#myHandDisplay.hand-container {
    /* min-height: 176px; */ /* 这个min-height可以保留，或者更多依赖flex-grow */
    /* align-content: flex-start; */ /* 改为align-items: center，让卡牌在容器中垂直居中 */
}
/* is-middle-dun-active 等样式不变 */
/* #myHandDisplay 的伪元素文字更新逻辑不变 */


.droppable-area.drag-over { /* ... */ }
.card { width: 50px; height: 70px; margin: 3px; /* ... (其他不变) ... */ }
.card img { /* ... */ }
.card.dragging { /* ... */ }
.card-error-placeholder, .card-image-error-text { /* ... */ }

/* --- 消息和操作区 --- */
.feedback-and-actions-area {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    padding-top: 10px;
    /* flex-grow: 1; */ /* 可以减小这个比例，或者设为0，让它只占内容高度 */
    flex-shrink: 0; /* <<--- 重要：防止这个区域被过度压缩，确保按钮总是可见 */
    justify-content: center; /* 让按钮和消息在该区域内垂直居中 */
    min-height: 70px;
}
/* ... (其他 message, game-actions, resultDetails 样式不变或微调) ... */
