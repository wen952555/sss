/* frontend/css/style.css (严格按1:2:1比例划分红框区域) */

* { margin: 0; padding: 0; box-sizing: border-box; }
html { height: 100%; }
body {
    font-family: system-ui, sans-serif;
    background-color: #f0f2f5;
    padding: 8px;
    display: flex;
    flex-direction: column;
    min-height: 100%;
}

main.game-container {
    max-width: 480px; /* <<--- 再次减小，让卡牌在手牌区更容易按7+6排列 */
    width: 100%;
    margin: 5px auto;
    padding: 10px;
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    overflow: hidden;
}

#gameTable {
    display: flex;
    flex-direction: column;
    gap: 8px;
    flex-grow: 1;
    overflow: hidden;
}

/* --- AI 玩家信息区 --- */
.ai-player-display-area {
    display: flex;
    flex-direction: row; /* 横向排列 */
    justify-content: space-around;
    gap: 8px;
    flex-shrink: 0; /* 固定高度，不压缩 */
    padding-bottom: 5px;
}
.player-info-box { /* ... (保持不变) ... */ }

/* --- 核心摆牌区 (红框区域) --- */
.player-arrangement-zone {
    display: flex;
    flex-direction: column; /* 内部的三个部分垂直排列 */
    /* align-items: stretch; // 子元素默认会横向拉伸 */
    gap: 5px; /* <<--- 减小墩位父容器之间的间隙 */
    padding: 5px 0px;
    border: 1px solid #ced4da;
    border-radius: 6px;
    background-color: #f8f9fa;
    flex-grow: 1; /* 让这个区域占据所有可用的垂直空间 (相对于AI区和按钮区) */
    min-height: 300px; /* 保持一个基础高度 */
    overflow: hidden; /* 不希望此区域本身滚动 */
    /* border: 2px solid red; */ /* 调试用 */
}

/* 包裹每个墩的 .hand-container 的容器 */
/* 这些是 .player-arrangement-zone 的直接子元素 */
.dun-section, .human-player-hand-area {
    width: 95%;
    max-width: 460px; /* 配合 main.game-container 的宽度 */
    margin-left: auto;
    margin-right: auto;
    display: flex; /* 确保内部的 .hand-container 能正确工作 */
    flex-direction: column;
    overflow: hidden; /* 防止内部内容溢出这些父容器 */
    /* border: 1px dotted purple; */ /* 调试边界 */
}

/* --- 实现红框区域内部1:2:1高度比例 --- */
.dun-section.top-dun {
    flex-grow: 1;     /* 比例 1 */
    flex-basis: 0;    /* 从0开始分配空间 */
    min-height: 80px; /* 至少能放下一行牌的高度 + 伪元素文字 */
}
.human-player-hand-area { /* 手牌/中墩区 */
    flex-grow: 2;     /* 比例 2 */
    flex-basis: 0;    /* 从0开始分配空间 */
    min-height: 160px;/* 至少能放下两行牌的高度 + 伪元素文字 */
}
.dun-section.bottom-dun { /* 尾墩 */
    flex-grow: 1;     /* 比例 1 */
    flex-basis: 0;    /* 从0开始分配空间 */
    min-height: 80px;
}


/* --- 卡牌容器 (手牌区和墩位) --- */
.hand-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: flex-start;  /* 卡牌从顶部开始排列 */
    align-content: flex-start;/* 多行内容也从顶部开始 */
    padding: 22px 5px 5px 5px;
    border: 2px dashed #d1d5db;
    border-radius: 5px;
    background-color: #fff;
    position: relative;
    width: 100%; /* 占满其父级 */
    height: 100%; /* <<--- 让卡牌容器填满其父级分配给它的高度 */
    box-sizing: border-box;
    overflow-y: auto; /* 如果卡牌多，允许内部滚动 */
}

.hand-container::before { /* 伪元素文字样式不变 */
    content: attr(data-dun-label) " " attr(data-dun-type);
    position: absolute; top: 3px; left: 50%; transform: translateX(-50%);
    font-size: 0.75em; color: #4b4f56; padding: 1px 4px;
    background-color: rgba(248, 249, 250, 0.85);
    border-radius: 3px; z-index: 5; pointer-events: none; white-space: nowrap;
    font-weight: 500;
}

#myHandDisplay.hand-container {
    border-color: #4c66a4;
    background-color: #eff2f5;
    /* min-height 不再需要，由父级的 flex-grow/basis 控制 */
}
/* is-middle-dun-active 等样式不变 */
/* #myHandDisplay 的伪元素文字更新逻辑不变 */


.droppable-area.drag-over { /* ... */ }

.card {
    width: 46px; height: 64px; margin: 2px;
    /* ... (其他不变) ... */
}
.card img { /* ... */ }
.card.dragging { /* ... */ }
.card-error-placeholder, .card-image-error-text { /* ... */ }


/* --- 消息和操作区 --- */
.feedback-and-actions-area {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    padding: 8px 0;
    flex-shrink: 0; /* 固定高度，不被压缩 */
    justify-content: center;
    margin-top: auto; /* 将这个区域推到底部 */
    min-height: 55px;
}
/* ... (其他 message, game-actions, resultDetails 样式不变或微调) ... */
